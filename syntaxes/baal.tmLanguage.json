{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "baal",
	"foldingStartMarker": "\\{[ \\t]*$",
	"foldingStopMarker": "^[ \\t]*\\}",
	"patterns": [
		{
			"include": "#document"
		}
	],
	"repository": {
		"document": {
			"patterns": [{
				"include": "#comment"
			}, {
				"include": "#namespace"
			}]
		},
		"namespace": {
			"begin": "\\b(namespace)(?<=\\b[.[:alnum:]]+|[ \\t]*/[/*])",
			"beginCaptures": {
				"1": {
					"name": "storage.type.namespace.baal"
				}
			},
			"end": "(?<=})",
			"patterns": [{
				"include": "#comment"
			}, {
				"begin": "\\b([.[:alnum:]]+)\\b",
				"beginCaptures": {
					"1": {
						"name": "entity.name.type.namespace.baal",
						"patterns": [{
							"include": "#qualified-name"
						}, {
							"include": "#invalid-name"
						}]
					}
				},
				"end": "(?<=})",
				"patterns": [{
					"include": "#comment"
				}, {
					"include": "#import-clause"
				}, {
					"begin": "{",
					"end": "}",
					"patterns": [{
						"include": "#declarations"
					}]
				}]
			}],
			"name": "meta.namespace.baal"
		},
		"import-clause":{
			"begin": "(\\bimport\\b|[ \\t]*\\+=)",
			"end": "(?={)",
			"beginCaptures": {
				"1": {
					"name": "keyword.control.import.baal"
				}
			},
			"patterns": [{
				"include": "#comment"
			}, {
				"begin": "(\\b[.\\*[:alnum:]]+)",
				"end": "(?={)",
				"beginCaptures": {
					"1": {
						"name": "entity.name.type.import.baal",
						"patterns": [{
							"include": "#qualified-name-with-wildcard"
						}, {
							"include": "#invalid-name"
						}]
					}
				},
				"patterns": [{
					"include": "#comment"
				}, {
					"include": "#import-clause"
				}]
			}]
		},
		"declarations":{
			"begin": "(?<={)",
			"end": "(?=})",
			"patterns": [{
				"include": "#comment"
			}, {
				"include": "#doc-comment"
			}, {
				"include": "#abstract-entity"
			}, {
				"include": "#entity"
			}, {
				"include": "#service"
			}]
		},
		"abstract-entity": {
			"begin": "\\b(abstract)\\b",
			"beginCaptures": {
				"1": {
					"name": "storage.modifier.baal"
				}
			},
			"end": "(?<=})",
			"patterns": [{
				"include": "#comment"
			}, {
				"include": "#entity"
			}]
		},
		"entity": {
			"begin": "\\b(entity)\\b",
			"beginCaptures": {
				"1": {
					"name": "storage.type.entity.baal"
				}
			},
			"end": "(?<=})",
			"patterns": [{
				"include": "#comment"
			}, {
				"comment": "entityの定義(entity Entity ...)の、「entitiy」を除いた部分",
				"begin": "\\b([[:alnum:]]+)\\b",
				"beginCaptures": {
					"1": {
						"name": "entity.name.type.namespace.baal",
						"patterns": [{
							"include": "#identifier"
						}, {
							"include": "#invalid-name"
						}]
					}
				},
				"end": "(?<=})",
				"patterns": [{
					"include": "#comment"
				}, {
					"include": "#include-clause"
				}, {
					"begin": "{",
					"end": "}",
					"patterns": [{
						"include": "#comment"
					}, {
						"include": "#doc-comment"
					}, {
						"include": "#field-definition"
					}],
					"name": "meta.entity.body.baal"
				}]
			}],
			"name": "meta.entity.baal"
		},
		"include-clause": {
			"begin": "(\\bincludes\\b|[ \\t]*\\+=)",
			"beginCaptures": {
				"1": {
					"name": "keyword.control.includes.baal"
				}
			},
			"end": "(?={)",
			"patterns": [{
				"include": "#comment"
			}, {
				"include": "#entity"
			}, {
				"begin": "([[:upper:]][.*[:alnum:]]*)",
				"end": "(?={)",
				"beginCaptures": {
					"1": {
						"name": "entity.name.type.include.baal",
						"patterns": [{
							"include": "#qualified-name"
						}, {
							"include": "#invalid-name"
						}]
					}
				},
				"patterns": [{
					"include": "#comment"
				}, {
					"include": "#include-clause"
				}]
			}, {
				"include": "#doc-comment"
			}, {
				"include": "#include-clause"
			}]
		},
		"field-definition": {
			"begin": "([[:alnum:]]+)\\s*",
			"beginCaptures": {
				"1": {
					"name": "support.variable.baal",
					"patterns": [{
						"include": "#identifier"
					}, {
						"include": "#invalid-name"
					}]
				}
			},
			"end": "(?<=;)",
			"name": "meta.definition.field.baal",
			"patterns": [{
				"include": "#comment"
			}, {
				"begin": "(:)|\\b(as)",
				"beginCaptures": {
					"1": {
						"name": "keyword.other.as.baal"
					},
					"2": {
						"name": "keyword.other.as.baal"
					}
				},
				"end": ";",
				"endCaptures": {
					"0": {
						"name": "punctuation.terminator.field.baal"
					}
				},
				"patterns": [{
					"include": "#modifiered-type"
				}]
			}]
		},
		"modifiered-type": {
			"begin": "(\\?|!|\\brequired(?=\\b)|\\bnullable(?=\\b))",
			"beginCaptures": {
				"1": {
					"patterns": [{
						"include": "#required"
					}, {
						"include": "#nullable"
					}]
				}
			},
			"end": "(?=\\<|=|accepts|returns|;)",
			"patterns": [{
				"include": "#comment"
			}, {
				"include": "#iteration-and-type"
			}, {
				"include": "#iteration-by-word-and-type"
			}, {
				"include": "#type"
			}]
		},
		"required": {
			"match": "(!|required)",
			"name": "storage.modifier.required.baal"
		},
		"nullable": {
			"match": "(\\?|nullable)",
			"name": "storage.modifier.nullable.baal"
		},
		"iteration-and-type": {
			"begin": "\\s*(@|%)",
			"beginCaptures": {
				"1": {
					"patterns": [{
						"match": "@",
						"name": "storage.type.list-of.baal"
					}, {
						"match": "%",
						"name": "storage.type.dictionary-of.baal"
					}]
				}
			},
			"end": "(?=\\<|=|accepts|returns|;)",
			"patterns": [{
				"include": "#comment"
			}, {
				"include": "#iteration-and-type"
			}, {
				"include": "#iteration-by-word-and-type"
			}, {
				"include": "#type"
			}]
		},
		"iteration-by-word-and-type": {
			"comment": "\"list of\"とか\"dictionary of\"の\"list\", \"dictionary\"の部分",
			"begin": "\\b(list|dictionary|hash|map)",
			"beginCaptures": {
				"1": {
					"patterns": [{
						"match": "list",
						"name": "storage.modifier.list-of.baal"
					}, {
						"match": "dictionary|hash|map",
						"name": "storage.modifier.dictionary-of.baal"
					}]
				}
			},
			"end": "(?=\\<|=|accepts|returns|;)",
			"patterns": [{
				"include": "#comment"
			}, {
				"comment": "\"list of\"とか\"dictionary of\"の\"of\"の部分",
				"begin": "(\\s*)(of)(?=\\b)",
				"beginCaptures": {
					"1": {
						"name": "punctuation.iteration.baal"
					},
					"2": {
						"name": "storage.modifier.list-or-dictionary-of.baal"
					}
				},
				"end": "(?=\\<|=|accepts|returns|;)",
				"patterns": [{
					"include": "#comment"
				}, {
					"include": "#iteration-and-type"
				}, {
					"include": "#iteration-by-word-and-type"
				}, {
					"include": "#type"
				}]
			}]
		},
		"type": {
			"begin": "",
			"end": "(?=\\<|=|accepts|returns|;)",
			"patterns": [{
				"include": "#comment"
			}, {
				"include": "#entity"
			}, {
				"include": "#primitive-type"
			}, {
				"include": "#reference-type"
			}, {
				"include": "#pseudo-type"
			}]
		},
		"pseudo-type": {
			"include": "#string"
		},
		"primitive-type": {
			"patterns":[{
				"begin": "\\b(integer\\()",
				"beginCaptures": {
					"1": {
						"name": "storage.type.integer-begin.baal"
					}
				},
				"end": "\\)",
				"endCaptures": {
					"0": {
						"name": "storage.type.integer-end.baal"
					}
				},
				"patterns": [{
					"match": "8|16|32|64",
					"name": "storage.type.integer-size.baal"
				}, {
					"match": "\\d+",
					"name": "invalid.illegal.integer-size.wrong-number.baal"
				}, {
					"match": "[^)[:space:]]+",
					"name": "invalid.illegal.integer-size.not-number.baal"
				}]
			}, {
				"begin": "\\b(float\\()",
				"beginCaptures": {
					"1": {
						"name": "storage.type.float-begin.baal"
					}
				},
				"end": "(?<=\\))",
				"patterns": [{
					"begin": "(binary|decimal)",
					"beginCaptures": {
						"1": {
							"name": "storage.type.float-base.baal"
						}
					},
					"end": "(?<=\\))",
					"patterns": [{
						"begin": "[[:alnum:]]+",
						"beginCaptures": {
							"0": {
								"patterns": [{
									"match": "32|64",
									"name": "storage.type.float-size.baal"
								}, {
									"match": ".+",
									"name": "invalid.illegal.float-size.baal"
								}]
							}
						},
						"end": "\\)",
						"endCaptures": {
							"0": {
								"name": "storage.type.float-end.baal"
							}
						},
						"patterns": [{
							"match": "[^[:space:])]+",
							"name": "invalid.illegal.float-definition.baal"
						}]
					}]
				}]
			}, {
				"match": "\\b(bool(?:ean)?|int(?:8|16|32|64|eger)?|s?byte|short|long|float(?:32|64)?|double|real|number|decimal(?:32|64)?|numeric|money|date(?:time)?|time(?:stamp)?|str(?:ing)?|bin(?:ary)?)(?!\\()(?=\\b)",
				"captures": {
					"1": {
						"name": "storage.type.primitive.baal"
					}
				}
			}]
		},
		"reference-type": {
			"match": "([.[:alnum:]]+)",
			"captures": {
				"1": {
					"name": "support.type.baal",
					"patterns": [{
						"include": "#qualified-name"
					}, {
						"include": "#invalid-name"
					}]
				}
			}
		},
		"service": {
			"begin": "\\b(service)\\b",
			"beginCaptures": {
				"1": {
					"name": "storage.type.service.baal"
				}
			},
			"end": "(?<=})",
			"patterns": [{
				"include": "#comment"
			}, {
				"comment": "serviceの定義(service ServiceXXX ...)の、「service」を除いた部分",
				"begin": "\\b([[:alnum:]]+)\\b",
				"beginCaptures": {
					"1": {
						"name": "entity.name.type.service.baal",
						"patterns": [{
							"include": "#identifier"
						}, {
							"include": "#invalid-name"
						}]
					}
				},
				"end": "(?<=})",
				"patterns": [{
					"include": "#comment"
				}, {
					"begin": "{",
					"end": "}",
					"patterns": [{
						"include": "#comment"
					}, {
						"include": "#doc-comment"
					}, {
						"include": "#method-definition"
					}],
					"name": "meta.service.body.baal"
				}]
			}],
			"name": "meta.service.baal"
		},
		"method-definition": {
			"begin": "([[:alnum:]]+)\\s*",
			"beginCaptures": {
				"1": {
					"name": "support.function.baal",
					"patterns": [{
						"include": "#identifier"
					}, {
						"include": "#invalid-name"
					}]
				}
			},
			"end": "(?<=;)",
			"name": "meta.definition.method.baal",
			"patterns": [{
				"include": "#comment"
			}, {
				"begin": "(:)|\\b(as)",
				"beginCaptures": {
					"1": {
						"name": "keyword.other.as.baal"
					},
					"2": {
						"name": "keyword.other.as.baal"
					}
				},
				"end": ";",
				"endCaptures": {
					"0": {
						"name": "punctuation.terminator.method.baal"
					}
				},
				"patterns": [{
					"include": "#method-request-response"
				}]
			}]
		},
		"method-request-response": {
			"begin": "(?:\\b(?:(accepts)|(returns))(?=\\b)|\\s*(?:(<=)|(=>)))",
			"beginCaptures": {
				"1": {
					"name": "storage.modifier.accepts.baal"
				},
				"2": {
					"name": "storage.modifier.returns.baal"
				},
				"3": {
					"name": "storage.modifier.accepts.baal"
				},
				"4": {
					"name": "storage.modifier.returns.baal"
				}
			},
			"end": "(?=;)",
			"patterns": [{
				"include": "#comment"
			}, {
				"include": "#modifiered-type"
			}, {
				"include": "#method-request-response"
			}]
		},
		"identifier": {
			"match": "\\b[[:upper:]][[:alnum:]]*"
		},
		"qualified-name": {
			"match": "\\b([[:upper:]][[:alnum:]]*)(\\.[[:upper:]][[:alnum:]]*)*"
		},
		"qualified-name-with-wildcard": {
			"match": "\\b([[:upper:]][[:alnum:]]*)(\\.[[:upper:]][[:alnum:]]*)*(\\.\\*)?"
		},
		"invalid-name": {
			"match": "[.*[:alnum:]]+",
			"name": "invalid.illegal.baal"
		},
		"string": {
			"name": "string.quoted.double.baal",
			"match": "\"((?:(?:\\\\(?:b|f|n|r|t|\\\\|'|\"|x|u))|[^\\\\\"])*)\"",
			"captures": {
				"1": {
					"patterns": [{
						"match": "\\\\(?:b|f|n|r|t|\\\\|'|\"|x[0-9a-fA-F]{2}|u[0-9a-fA-F]{4})",
						"name": "constant.character.escape.baal"
					}, {
						"match": "\\\\(?:x|u)",
						"name": "invalid.illegal.constant.character.escape.baal"
					}]
				}
			}
		},
		"doc-comment": {
			"name": "comment.block.documentation.baal",
			"begin": "\\/\\#",
			"end": "\\#\\/",
			"patterns": [{
				"match": "(@[[:alpha:]]+)\\b",
				"name": "storage.type.class.baal"
			}, {
				"include": "text.xml"
			}]
		},
		"comment": {
			"patterns": [{
				"name":"comment.block.baal",
				"begin": "(^[ \\t]+)?(\\/\\*)",
				"beginCaptures": {
					"1": {
						"name": "punctuation.whitespace.comment.leading.baal"
					}
				},
				"end": "\\*\\/"
			}, {
				"name": "comment.line.double-slash.baal",
				"begin": "(^[ \\t]+)?(//)",
				"beginCaptures": {
					"1": {
						"name": "punctuation.whitespace.comment.leading.baal"
					},
					"2": {
						"name": "punctuation.definition.comment.baal"
					}
				},
				"end": "(?=^)"
			}]
		}
	},
	"scopeName": "source.baal"
}